
lab7_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000b2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  000000b2  00000126  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000128  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000097  00000000  00000000  000007f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000020  00000000  00000000  0000088b  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000039  00000000  00000000  000008ab  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000000c1  00000000  00000000  000008e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000085  00000000  00000000  000009a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000014f  00000000  00000000  00000a2a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000030  00000000  00000000  00000b7c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000000ab  00000000  00000000  00000bac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_pubtypes 0000002b  00000000  00000000  00000c57  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	10 c0       	rjmp	.+32     	; 0x22 <__ctors_end>
   2:	22 c0       	rjmp	.+68     	; 0x48 <__bad_interrupt>
   4:	21 c0       	rjmp	.+66     	; 0x48 <__bad_interrupt>
   6:	20 c0       	rjmp	.+64     	; 0x48 <__bad_interrupt>
   8:	1f c0       	rjmp	.+62     	; 0x48 <__bad_interrupt>
   a:	1e c0       	rjmp	.+60     	; 0x48 <__bad_interrupt>
   c:	1e c0       	rjmp	.+60     	; 0x4a <__vector_6>
   e:	1c c0       	rjmp	.+56     	; 0x48 <__bad_interrupt>
  10:	1b c0       	rjmp	.+54     	; 0x48 <__bad_interrupt>
  12:	1a c0       	rjmp	.+52     	; 0x48 <__bad_interrupt>
  14:	19 c0       	rjmp	.+50     	; 0x48 <__bad_interrupt>
  16:	18 c0       	rjmp	.+48     	; 0x48 <__bad_interrupt>
  18:	17 c0       	rjmp	.+46     	; 0x48 <__bad_interrupt>
  1a:	16 c0       	rjmp	.+44     	; 0x48 <__bad_interrupt>
  1c:	15 c0       	rjmp	.+42     	; 0x48 <__bad_interrupt>
  1e:	14 c0       	rjmp	.+40     	; 0x48 <__bad_interrupt>
  20:	13 c0       	rjmp	.+38     	; 0x48 <__bad_interrupt>

00000022 <__ctors_end>:
  22:	11 24       	eor	r1, r1
  24:	1f be       	out	0x3f, r1	; 63
  26:	cf e5       	ldi	r28, 0x5F	; 95
  28:	d2 e0       	ldi	r29, 0x02	; 2
  2a:	de bf       	out	0x3e, r29	; 62
  2c:	cd bf       	out	0x3d, r28	; 61

0000002e <__do_copy_data>:
  2e:	10 e0       	ldi	r17, 0x00	; 0
  30:	a0 e6       	ldi	r26, 0x60	; 96
  32:	b0 e0       	ldi	r27, 0x00	; 0
  34:	e2 eb       	ldi	r30, 0xB2	; 178
  36:	f0 e0       	ldi	r31, 0x00	; 0
  38:	02 c0       	rjmp	.+4      	; 0x3e <__SP_H__>
  3a:	05 90       	lpm	r0, Z+
  3c:	0d 92       	st	X+, r0
  3e:	a2 36       	cpi	r26, 0x62	; 98
  40:	b1 07       	cpc	r27, r17
  42:	d9 f7       	brne	.-10     	; 0x3a <__CCP__+0x6>
  44:	22 d0       	rcall	.+68     	; 0x8a <main>
  46:	33 c0       	rjmp	.+102    	; 0xae <_exit>

00000048 <__bad_interrupt>:
  48:	db cf       	rjmp	.-74     	; 0x0 <__vectors>

0000004a <__vector_6>:
#define fled 0.5

unsigned char led_status=0x7f;

ISR(TIMER1_OVF_vect)
{
  4a:	1f 92       	push	r1
  4c:	0f 92       	push	r0
  4e:	0f b6       	in	r0, 0x3f	; 63
  50:	0f 92       	push	r0
  52:	11 24       	eor	r1, r1
  54:	8f 93       	push	r24
  56:	9f 93       	push	r25
	TCNT1=0x10000-(xtal/1024/fled);
  58:	80 ee       	ldi	r24, 0xE0	; 224
  5a:	93 ee       	ldi	r25, 0xE3	; 227
  5c:	9d bd       	out	0x2d, r25	; 45
  5e:	8c bd       	out	0x2c, r24	; 44
	led_status>>=1;
  60:	80 91 60 00 	lds	r24, 0x0060
  64:	86 95       	lsr	r24
	led_status|=0x80;
  66:	80 68       	ori	r24, 0x80	; 128
  68:	80 93 60 00 	sts	0x0060, r24
	if (led_status==0xff) led_status=0x7f;
  6c:	8f 3f       	cpi	r24, 0xFF	; 255
  6e:	19 f4       	brne	.+6      	; 0x76 <__vector_6+0x2c>
  70:	8f e7       	ldi	r24, 0x7F	; 127
  72:	80 93 60 00 	sts	0x0060, r24
	PORTC=led_status;
  76:	80 91 60 00 	lds	r24, 0x0060
  7a:	85 bb       	out	0x15, r24	; 21
}
  7c:	9f 91       	pop	r25
  7e:	8f 91       	pop	r24
  80:	0f 90       	pop	r0
  82:	0f be       	out	0x3f, r0	; 63
  84:	0f 90       	pop	r0
  86:	1f 90       	pop	r1
  88:	18 95       	reti

0000008a <main>:

int main(void)
{
	DDRC=0xff;
  8a:	8f ef       	ldi	r24, 0xFF	; 255
  8c:	84 bb       	out	0x14, r24	; 20
	PORTC=led_status;
  8e:	80 91 60 00 	lds	r24, 0x0060
  92:	85 bb       	out	0x15, r24	; 21
	TCCR1A=0;
  94:	1f bc       	out	0x2f, r1	; 47
	TCCR1B=5;
  96:	85 e0       	ldi	r24, 0x05	; 5
  98:	8e bd       	out	0x2e, r24	; 46
	TCNT1=0x10000-(xtal/1024/fled);
  9a:	80 ee       	ldi	r24, 0xE0	; 224
  9c:	93 ee       	ldi	r25, 0xE3	; 227
  9e:	9d bd       	out	0x2d, r25	; 45
  a0:	8c bd       	out	0x2c, r24	; 44
	TIFR=0;
  a2:	18 be       	out	0x38, r1	; 56
	TIMSK=0x80;
  a4:	80 e8       	ldi	r24, 0x80	; 128
  a6:	89 bf       	out	0x39, r24	; 57
	GICR=0;
  a8:	1b be       	out	0x3b, r1	; 59
	sei();
  aa:	78 94       	sei
  ac:	ff cf       	rjmp	.-2      	; 0xac <main+0x22>

000000ae <_exit>:
  ae:	f8 94       	cli

000000b0 <__stop_program>:
  b0:	ff cf       	rjmp	.-2      	; 0xb0 <__stop_program>
